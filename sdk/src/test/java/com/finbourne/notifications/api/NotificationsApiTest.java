/*
 * FINBOURNE Notifications API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.296
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.notifications.api;

import com.finbourne.notifications.ApiException;
import com.finbourne.notifications.model.CreateEmailNotification;
import com.finbourne.notifications.model.CreateSmsNotification;
import com.finbourne.notifications.model.CreateWebhookNotification;
import com.finbourne.notifications.model.LusidProblemDetails;
import com.finbourne.notifications.model.LusidValidationProblemDetails;
import com.finbourne.notifications.model.Notification;
import com.finbourne.notifications.model.ResourceListOfNotification;
import com.finbourne.notifications.model.UpdateEmailNotification;
import com.finbourne.notifications.model.UpdateSmsNotification;
import com.finbourne.notifications.model.UpdateWebhookNotification;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationsApi
 */
@Ignore
public class NotificationsApiTest {

    private final NotificationsApi api = new NotificationsApi();

    
    /**
     * [EXPERIMENTAL] CreateEmailNotification: Add an email notification to a subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEmailNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        CreateEmailNotification createEmailNotification = null;
        Notification response = api.createEmailNotification(scope, code, createEmailNotification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] CreateSmsNotification: Add an SMS notification to a subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSmsNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        CreateSmsNotification createSmsNotification = null;
        Notification response = api.createSmsNotification(scope, code, createSmsNotification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] CreateWebhookNotification: Add a Webhook notification to a subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createWebhookNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        CreateWebhookNotification createWebhookNotification = null;
        Notification response = api.createWebhookNotification(scope, code, createWebhookNotification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] DeleteNotification: Delete a notification for a given subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        String id = null;
        api.deleteNotification(scope, code, id);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] GetNotification: Get a notification on a subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        String id = null;
        Notification response = api.getNotification(scope, code, id);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] ListNotifications: List all notifications on a subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotificationsTest() throws ApiException {
        String scope = null;
        String code = null;
        ResourceListOfNotification response = api.listNotifications(scope, code);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] UpdateEmailNotification: Update an email notification for a given subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateEmailNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        String id = null;
        UpdateEmailNotification updateEmailNotification = null;
        Notification response = api.updateEmailNotification(scope, code, id, updateEmailNotification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] UpdateSmsNotification: Update an SMS notification for a given subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSmsNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        String id = null;
        UpdateSmsNotification updateSmsNotification = null;
        Notification response = api.updateSmsNotification(scope, code, id, updateSmsNotification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] UpdateWebhookNotification: Update a Webhook notification for a given subscription.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWebhookNotificationTest() throws ApiException {
        String scope = null;
        String code = null;
        String id = null;
        UpdateWebhookNotification updateWebhookNotification = null;
        Notification response = api.updateWebhookNotification(scope, code, id, updateWebhookNotification);

        // TODO: test validations
    }
    
}
